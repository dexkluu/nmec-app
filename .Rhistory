install.packages("devtools")
devtools::install_github("kW-Labs/nmecr", upgrade = "never")
install.packages("C:/Users/DLUU/Documents/R Tar Files/assertive.properties_0.0-5.tar.gz", repos=NULL, type="source")
install.packages("assertive.base")
install.packages("C:/Users/DLUU/Documents/R Tar Files/assertive.properties_0.0-5.tar.gz", repos=NULL, type="source")
install.packages("C:/Users/DLUU/Documents/R Tar Files/assertive_0.3-6.tar.gz", repos=NULL, type="source")
packages = c('assertive.types', 'assertive.numbers', 'assertive.strings', 'assertive.datetimes', 'assertive.files', 'assertive.sets', 'assertive.matrices', 'assertive.models', 'assertive.data', 'assertive.data.uk', 'assertive.data.us', 'assertive.reflection', 'assertive.code')
packages
for (i in packages) {
install.packages(i)
}
install.packages("C:/Users/DLUU/Documents/R Tar Files/assertive.properties_0.0-5.tar.gz", repos=NULL, type="source")
install.packages("C:/Users/DLUU/Documents/R Tar Files/assertive_0.3-6.tar.gz", repos=NULL, type="source")
install.packages("assertive.types")
install.packages("assertive.datetimes")
dir("C:/Users/DLUU/Documents/R Tar Files")
file.path("C:/Users/DLUU/Documents/R Tar Files", "test")
tar_dir_path = "C:/Users/DLUU/Documents/R Tar Files"
for (i in dir(tar_dir_path)){
install.packages(file.path(tar_dir_path, i), repos=NULL, type="source")
}
install.packages("C:/Users/DLUU/Documents/R Tar Files/assertive.strings_0.0-3.tar.gz", repos=NULL, type="source")
for (i in dir(tar_dir_path)){
install.packages(file.path(tar_dir_path, i), repos=NULL, type="source")
}
devtools::install_github("kW-Labs/nmecr", upgrade = "never")
install.packages("lubridate")
install.packages("dplyr")
install.packages("data.table")
install.packages("ggplot2")
install.packages("readxl")
install.packages("zipcodeR")
install.packages("geosphere")
3645544 - 10730 - 148236 - 4159 - 108851
-(10730 - 148236 - 4159 - 108851)
knitr::opts_chunk$set(echo = TRUE)
# library(kableExtra)
campus_pop = 18754
health_pop = 13812
campus_emissions_per_person_per_year = average_emissions$avg_emissions[1]  # 0.620320 2022
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
knitr::opts_chunk$set(echo = TRUE)
# library(kableExtra)
campus_pop = 18754
health_pop = 13812
campus_emissions_per_person_per_year = average_emissions$avg_emissions[1]  # 0.620320 2022
library(dplyr)
library(tidyr)
library(readxl)
library(stringr)
library(zipcodeR)
library(geosphere)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd('..')
# Read Data
work_zip_map_main = read_excel("Work Zip Code Mapper.xlsx", sheet="Main")
work_zip_map_other = read_excel("Work Zip Code Mapper.xlsx", sheet="Other")
df = read_excel("New Spring 2024 Commute Survey_July 5, 2024_12.13-3.xlsx")
# Constants
public_transport_mpg = 80.8
motorcycle_moped_mpg = 50.7
# Only keep finished survey responses
df = df[df$Finished=="True",]
# Count how many people put Other as their work office
print("Number of people responding 'Other' for their primary work location:")
print(sum(df$`Q8 Which of the following UCSF locations do you consider your primary work or study location? (select one from the list) - Selected Choice`=="Other"))
print("Number of people not responding 'Other' for their primary work location:")
print(sum(df$`Q8 Which of the following UCSF locations do you consider your primary work or study location? (select one from the list) - Selected Choice`!="Other"))
# Map primary work locations to a zip code
# Ensure unique matches in work_zip_map_main and work_zip_map_other
work_zip_map_main_unique <- work_zip_map_main %>% distinct(`main office`, .keep_all = TRUE)
work_zip_map_other_unique <- work_zip_map_other %>% distinct(office, .keep_all = TRUE)
# Perform sequential joins and coalesce zip code columns
result <- df %>%
left_join(work_zip_map_main_unique, by = c(`Q8 Which of the following UCSF locations do you consider your primary work or study location? (select one from the list) - Selected Choice` = "main office")) %>%
left_join(work_zip_map_other_unique, by = c(`Q8_36_TEXT Which of the following UCSF locations do you consider your primary work or study location? (select one from the list) - Other - Text` = "office")) %>%
mutate(zip5 = coalesce(zip5.y, zip5.x)) %>%
rename(work_zip = zip5)
result = result %>%
mutate(home_zip=str_sub(`Q4 What is the ZIP code where you currently live?`, 1, 5)) %>%
mutate(home_zip2=as.integer(home_zip))
## Load zip code database
zip_code = read.csv("uszips.csv")
# manually entered lat and lng for zip codes that did not
# exist in the database
zip_code[nrow(zip_code) + 1,] <- c(94143, 37.76, -122.46)
zip_code[nrow(zip_code) + 1,] <- c(94013, 37.77, -122.41)
zip_code[nrow(zip_code) + 1,] <- c(93116, 34.48, -120.04)
zip_code[nrow(zip_code) + 1,] <- c(94978, 37.99, -122.59)
zip_code[nrow(zip_code) + 1,] <- c(94616, 37.48, -12.16)
zip_code[nrow(zip_code) + 1,] <- c(94614, 37.73, -122.20)
# Function to check for missing zips and their source
check_missing_zips <- function(df, zip_code_df, zip_column, source_column) {
df %>%
select({{zip_column}}, {{source_column}}) %>%
distinct() %>%
filter(!{{zip_column}} %in% zip_code_df$zip) %>%
mutate(source = source_column)
}
# Check for missing zip codes in home_zip2
missing_home_zips <- check_missing_zips(result, zip_code, home_zip2, "home_zip2")
# Check for missing zip codes in work_zip
missing_work_zips <- check_missing_zips(result, zip_code, work_zip, "work_zip")
# Combine the results
missing_zips <- bind_rows(missing_home_zips, missing_work_zips)
# Display missing zip codes with their source
print(missing_zips) # All missing zip codes come from the home_zips
dim(result[result$home_zip2 %in% missing_zips[missing_zips$source=="home_zip2",]$home_zip2,]) # Only 30 missing so just drop them.
result = result[!(result$home_zip2 %in% missing_zips[missing_zips$source=="home_zip2",]$home_zip2),]
distance_meters = c()
# finding distance between home zip code and work zip code
for (k in 1:length(result$home_zip2)) {
home = result$home_zip2[k]
work = result$work_zip[k]
if (is.na(home) | is.na(work)) {
distance_meters[k] = 0
next
}
home_lat = zip_code$lat[zip_code$zip == home]
home_lng = zip_code$lng[zip_code$zip == home]
work_lat = zip_code$lat[zip_code$zip == work]
work_lng = zip_code$lng[zip_code$zip == work]
distance_meters[k] <- distGeo(p1 = c(home_lng, home_lat), p2 = c(work_lng, work_lat))
}
# Convert meters to miles and add to the main dataframe
result$roundtrip_miles = (distance_meters/1609.34)*2
# Drop rows where total round trip miles are greater than 400 miles and the
# employee is not remote because unrealistic
result = result[!((result$roundtrip_miles > 400) &
((result$`Q5 Which best describes where you work during a typical week? (check one)`!="Off-site") | (is.na(result$`Q5 Which best describes where you work during a typical week? (check one)`)))), ]
# Get car mpg
vehicles = read.csv("vehicles.csv")
mpg = c()
for (i in 1:dim(result)[1]) {
make = result$`Q16_1 To calculate and report commute emissions as part of UCSF sustainability goals, please provide the make and model of your commuting vehicle. Select the closest option. - Make`[i]
model = result$`Q16_2 To calculate and report commute emissions as part of UCSF sustainability goals, please provide the make and model of your commuting vehicle. Select the closest option. - Model`[i]
car_year = result$`Q17_1 To calculate and report commute emissions as part of UCSF sustainability goals, provide the year of your commuting vehicle. Select the closest option. - Year`[i]
if (is.na(make)) {
mpg[i] = NA
next
}
temp = vehicles[(vehicles$make==make) & (vehicles$model==model) & (vehicles$year==car_year),]
if (dim(temp)[1] == 0) {
mpg[i] = NA
} else if (dim(temp)[1] == 1) {
mpg[i] = temp$comb08[1]
} else {
mpg[i] = mean(temp$comb08, na.rm=TRUE)
}
}
result$mpg = mpg
### Calculate Emissions for Different Commute Modes
## Count number of days of each commute mode
# Drive Alone
commute_mode_cols = c("Q11_1 Identify how you commute during a typical week. For those who commute to campus using multiple modes (e.g. BART + UCSF Shuttle), identify what mode of travel you use for the LONGEST distance of your commute. \r\n\r\nPlease check one box for EVERY DAY of the week, including days off and weekends. For example, if you do not work Saturday or Sunday, please check those as Day Off / Compressed Work Week / Weekend (No Commute).\r\n\r\n*If taken on a mobile device, scroll down and across to see more options. - Monday",
"Q11_2 Identify how you commute during a typical week. For those who commute to campus using multiple modes (e.g. BART + UCSF Shuttle), identify what mode of travel you use for the LONGEST distance of your commute. \r\n\r\nPlease check one box for EVERY DAY of the week, including days off and weekends. For example, if you do not work Saturday or Sunday, please check those as Day Off / Compressed Work Week / Weekend (No Commute).\r\n\r\n*If taken on a mobile device, scroll down and across to see more options. - Tuesday",
"Q11_3 Identify how you commute during a typical week. For those who commute to campus using multiple modes (e.g. BART + UCSF Shuttle), identify what mode of travel you use for the LONGEST distance of your commute. \r\n\r\nPlease check one box for EVERY DAY of the week, including days off and weekends. For example, if you do not work Saturday or Sunday, please check those as Day Off / Compressed Work Week / Weekend (No Commute).\r\n\r\n*If taken on a mobile device, scroll down and across to see more options. - Wednesday",
"Q11_4 Identify how you commute during a typical week. For those who commute to campus using multiple modes (e.g. BART + UCSF Shuttle), identify what mode of travel you use for the LONGEST distance of your commute. \r\n\r\nPlease check one box for EVERY DAY of the week, including days off and weekends. For example, if you do not work Saturday or Sunday, please check those as Day Off / Compressed Work Week / Weekend (No Commute).\r\n\r\n*If taken on a mobile device, scroll down and across to see more options. - Thursday",
"Q11_5 Identify how you commute during a typical week. For those who commute to campus using multiple modes (e.g. BART + UCSF Shuttle), identify what mode of travel you use for the LONGEST distance of your commute. \r\n\r\nPlease check one box for EVERY DAY of the week, including days off and weekends. For example, if you do not work Saturday or Sunday, please check those as Day Off / Compressed Work Week / Weekend (No Commute).\r\n\r\n*If taken on a mobile device, scroll down and across to see more options. - Friday",
"Q11_6 Identify how you commute during a typical week. For those who commute to campus using multiple modes (e.g. BART + UCSF Shuttle), identify what mode of travel you use for the LONGEST distance of your commute. \r\n\r\nPlease check one box for EVERY DAY of the week, including days off and weekends. For example, if you do not work Saturday or Sunday, please check those as Day Off / Compressed Work Week / Weekend (No Commute).\r\n\r\n*If taken on a mobile device, scroll down and across to see more options. - Saturday",
"Q11_7 Identify how you commute during a typical week. For those who commute to campus using multiple modes (e.g. BART + UCSF Shuttle), identify what mode of travel you use for the LONGEST distance of your commute. \r\n\r\nPlease check one box for EVERY DAY of the week, including days off and weekends. For example, if you do not work Saturday or Sunday, please check those as Day Off / Compressed Work Week / Weekend (No Commute).\r\n\r\n*If taken on a mobile device, scroll down and across to see more options. - Sunday")
# Gather the columns into long format
long = result %>%
select(all_of(commute_mode_cols)) %>%
mutate(row_id = row_number()) %>%
pivot_longer(cols = -row_id, names_to = "column", values_to="value")
# Count occurrences of each string for each row
count_df <- long %>%
count(row_id, value) %>%
pivot_wider(names_from = value, values_from = n, values_fill = list(n = 0))
# Join the count data back to the original dataframe if needed
final_df <- result %>%
mutate(row_id = row_number()) %>%
left_join(count_df, by = "row_id") %>%
select(-row_id)
# Get options list to check
options_list = unique(long$value)
# Fill in average mpg from sample for missing mpg for those who drive.
avg_mpg = mean(final_df[(final_df$`Drive Alone`>0) & (!is.na(final_df$mpg)), ]$mpg)
final_df = final_df %>%
mutate(mpg = ifelse(`Drive Alone` > 0 & is.na(mpg), avg_mpg, mpg))
final_df = final_df %>%
mutate(mpg = ifelse(`Drive Alone` == 0 & is.na(mpg), 0, mpg))
# Emissions calc
drive_alone_emissions = ((final_df$`Drive Alone`*final_df$roundtrip_miles)/final_df$mpg)*48*.00889
drive_alone_emissions = replace_na(drive_alone_emissions, 0)
emissions = drive_alone_emissions +
((final_df$`Uber / Lyft / Taxi - I am the only rider`*final_df$roundtrip_miles)/avg_mpg)*48*.00889 +
((final_df$`Uber / Lyft / Taxi - I am one of several riders`*final_df$roundtrip_miles)/avg_mpg)*48*.00889/2.5 +
((final_df$`Motorcycle / Moped`*final_df$roundtrip_miles)/motorcycle_moped_mpg)*48*.00889 +
((final_df$`Public Transit (Muni, BART, CalTrain, Ferry, etc.)`*final_df$roundtrip_miles)/public_transport_mpg)*48*.00889 +
((final_df$Carpool*final_df$roundtrip_miles)/avg_mpg)*48*.00889/2.5
final_df$emissions = emissions
## Find averages by health or campus
# Fill in responses that marked Other with best guess of Campus or Health
campus_health_helper = read_excel("CampusorHealth_Other_completed.xlsx")
campus_health_helper = campus_health_helper %>% distinct(Answer, .keep_all = TRUE)
final_df = final_df %>%
left_join(campus_health_helper, by = c(`Q1_3_TEXT Which of the following best represents your affiliation with UCSF? (check one) - Other (please specify) - Text` = "Answer"))
final_df = final_df %>%
mutate(`Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice` =
ifelse((`Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice`=="Other") & (BU=="C"), "Campus", `Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice`))
final_df = final_df %>%
mutate(`Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice` =
ifelse((`Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice`=="Other") & (BU=="H"), "Health", `Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice`))
final_df = final_df %>%
mutate(`Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice` =
ifelse((`Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice`=="Other") & (is.na(BU)), "Campus", `Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice`))
# Fill in NAs with Campus
final_df = final_df %>%
mutate(`Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice` =
ifelse(is.na(`Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice`), "Campus", `Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice`))
# Calculate average emissions
average_emissions <- final_df %>%
group_by(`Q1 Which of the following best represents your affiliation with UCSF? (check one) - Selected Choice`) %>%
summarize(avg_emissions = mean(emissions, na.rm = TRUE))
writexl::write_xlsx(final_df, "Processed Commute Data.xlsx")
average_emissions
round(42.9)
shiny::runApp('Projects/Shiny Apps')
shiny::runApp('GitHub/nmec-app')
shiny::runApp('GitHub/nmec-app')
shiny::runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
shiny::runApp('GitHub/nmec-app')
?accordionItem
library(bslip)
library(bslib)
?accordionItem
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
runApp('GitHub/nmec-app')
